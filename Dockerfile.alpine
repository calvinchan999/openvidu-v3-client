FROM node:18-alpine AS base

# Install essential packages
RUN apk add --no-cache \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont \
    curl \
    bash \
    pulseaudio \
    pulseaudio-utils \
    alsa-utils \
    alsa-lib \
    alsa-lib-dev \
    nano \
    dbus \
    dbus-x11 \
    su-exec

# Set environment variables
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
ENV CHROME_BIN=/usr/bin/chromium-browser
ENV GOOGLE_CHROME_BIN=/usr/bin/chromium-browser
ENV CHROMIUM_BIN=/usr/bin/chromium-browser
ENV NODE_ENV=production
ENV ALSA_DEVICE=plughw:1,0
ENV AUDIO_DEVICE=plughw:1,0
ENV PULSE_DEVICE=plughw:1,0
# Fallback to QCC5125 if C-Media not available
ENV QCC5125_DEVICE=hw:2,0

# Create app directory
WORKDIR /app

# Copy package files
COPY package.json ./

# Install dependencies with npm install (more compatible than npm ci)
RUN npm install --only=production --no-audit --no-fund --silent \
    && npm cache clean --force

# Create Chrome/Chromium compatibility symlinks
RUN ln -sf /usr/bin/chromium-browser /usr/bin/google-chrome \
    && ln -sf /usr/bin/chromium-browser /usr/bin/chrome \
    && ln -sf /usr/bin/chromium-browser /usr/local/bin/google-chrome \
    && ln -sf /usr/bin/chromium-browser /usr/local/bin/chrome

# Verify browser installation
RUN echo "🔍 Verifying browser installation..." \
    && ls -la /usr/bin/chromium* || echo "No chromium files found" \
    && ls -la /usr/bin/google-chrome* || echo "No google-chrome files found" \
    && /usr/bin/chromium-browser --version || echo "Chromium version check failed" \
    && which chromium-browser || echo "chromium-browser not in PATH"

# Copy application files
COPY . .

# Make existing scripts executable (only the ones that exist)
RUN chmod +x /app/setup-audio.sh /app/test-audio-devices.sh /app/test-audio-cards.sh /app/simple-startup.sh /app/fix-audio-after-reboot.sh 2>/dev/null || true

# Create logs directory
RUN mkdir -p /app/logs

# Create PulseAudio configuration directory
RUN mkdir -p /etc/pulse

# Create PulseAudio client configuration
RUN echo "default-server = unix:/tmp/pulse-socket" > /etc/pulse/client.conf && \
    echo "autospawn = no" >> /etc/pulse/client.conf && \
    echo "daemon-binary = /usr/bin/pulseaudio" >> /etc/pulse/client.conf && \
    echo "extra-arguments = --log-target=syslog" >> /etc/pulse/client.conf

# Create PulseAudio daemon configuration
RUN echo "# PulseAudio daemon configuration" > /etc/pulse/daemon.conf && \
    echo "exit-idle-time = -1" >> /etc/pulse/daemon.conf && \
    echo "flat-volumes = no" >> /etc/pulse/daemon.conf && \
    echo "default-sample-format = s16le" >> /etc/pulse/daemon.conf && \
    echo "default-sample-rate = 44100" >> /etc/pulse/daemon.conf && \
    echo "default-sample-channels = 2" >> /etc/pulse/daemon.conf && \
    echo "default-channel-map = front-left,front-right" >> /etc/pulse/daemon.conf && \
    echo "high-priority = yes" >> /etc/pulse/daemon.conf && \
    echo "nice-level = -11" >> /etc/pulse/daemon.conf && \
    echo "realtime-scheduling = yes" >> /etc/pulse/daemon.conf && \
    echo "realtime-priority = 5" >> /etc/pulse/daemon.conf && \
    echo "avoid-resampling = yes" >> /etc/pulse/daemon.conf

# Create PulseAudio module loading configuration (default.pa)
RUN echo "#!/usr/bin/pulseaudio -nF" > /etc/pulse/default.pa && \
    echo "" >> /etc/pulse/default.pa && \
    echo "# Load native protocol module with unix socket" >> /etc/pulse/default.pa && \
    echo "load-module module-native-protocol-unix auth-anonymous=1 socket=/tmp/pulse-socket" >> /etc/pulse/default.pa && \
    echo "" >> /etc/pulse/default.pa && \
    echo "# Load ALSA modules" >> /etc/pulse/default.pa && \
    echo "load-module module-alsa-sink device=default" >> /etc/pulse/default.pa && \
    echo "load-module module-alsa-source device=default" >> /etc/pulse/default.pa && \
    echo "" >> /etc/pulse/default.pa && \
    echo "# Load restoration modules" >> /etc/pulse/default.pa && \
    echo "load-module module-device-restore" >> /etc/pulse/default.pa && \
    echo "load-module module-stream-restore" >> /etc/pulse/default.pa && \
    echo "load-module module-card-restore" >> /etc/pulse/default.pa && \
    echo "load-module module-augment-properties" >> /etc/pulse/default.pa && \
    echo "" >> /etc/pulse/default.pa && \
    echo "# Load additional modules" >> /etc/pulse/default.pa && \
    echo "load-module module-suspend-on-idle" >> /etc/pulse/default.pa && \
    echo "load-module module-switch-on-port-available" >> /etc/pulse/default.pa && \
    echo "load-module module-default-device-restore" >> /etc/pulse/default.pa

# Create ALSA configuration for better hardware compatibility
RUN echo "# ALSA configuration for QCC5125 and USB Audio Device access" > /etc/asound.conf && \
    echo "# Default to QCC5125 (card 2) if available, fallback to USB Audio (card 1)" >> /etc/asound.conf && \
    echo "pcm.!default {" >> /etc/asound.conf && \
    echo "    type plug" >> /etc/asound.conf && \
    echo "    slave.pcm \"qcc5125\"" >> /etc/asound.conf && \
    echo "}" >> /etc/asound.conf && \
    echo "" >> /etc/asound.conf && \
    echo "pcm.qcc5125 {" >> /etc/asound.conf && \
    echo "    type hw" >> /etc/asound.conf && \
    echo "    card 2" >> /etc/asound.conf && \
    echo "    device 0" >> /etc/asound.conf && \
    echo "    rate 48000" >> /etc/asound.conf && \
    echo "    channels 2" >> /etc/asound.conf && \
    echo "}" >> /etc/asound.conf && \
    echo "" >> /etc/asound.conf && \
    echo "pcm.usb_audio {" >> /etc/asound.conf && \
    echo "    type hw" >> /etc/asound.conf && \
    echo "    card 1" >> /etc/asound.conf && \
    echo "    device 0" >> /etc/asound.conf && \
    echo "}" >> /etc/asound.conf && \
    echo "" >> /etc/asound.conf && \
    echo "ctl.!default {" >> /etc/asound.conf && \
    echo "    type hw" >> /etc/asound.conf && \
    echo "    card 2" >> /etc/asound.conf && \
    echo "}" >> /etc/asound.conf && \
    echo "" >> /etc/asound.conf && \
    echo "# Fallback PCM devices" >> /etc/asound.conf && \
    echo "pcm.hw0 { type hw; card 0; device 0; }" >> /etc/asound.conf && \
    echo "pcm.hw1 { type hw; card 1; device 0; }" >> /etc/asound.conf && \
    echo "pcm.hw2 { type hw; card 2; device 0; }" >> /etc/asound.conf

# Create simple audio test script
RUN echo '#!/bin/bash' > /app/test-audio-simple.sh && \
    echo 'echo "Testing ALSA audio directly..."' >> /app/test-audio-simple.sh && \
    echo 'aplay -l' >> /app/test-audio-simple.sh && \
    echo 'echo "Testing QCC5125 device..."' >> /app/test-audio-simple.sh && \
    echo 'aplay -D plughw:2,0 /usr/share/sounds/alsa/Noise.wav 2>/dev/null || echo "Test audio file not found"' >> /app/test-audio-simple.sh && \
    chmod +x /app/test-audio-simple.sh

# Create enhanced startup script for PulseAudio
RUN echo '#!/bin/bash' > /app/start-pulseaudio.sh && \
    echo 'echo "🎵 Starting PulseAudio daemon..."' >> /app/start-pulseaudio.sh && \
    echo '' >> /app/start-pulseaudio.sh && \
    echo '# Kill any existing PulseAudio processes' >> /app/start-pulseaudio.sh && \
    echo 'pkill -f pulseaudio 2>/dev/null || true' >> /app/start-pulseaudio.sh && \
    echo 'sleep 3' >> /app/start-pulseaudio.sh && \
    echo '' >> /app/start-pulseaudio.sh && \
    echo '# Clean up old sockets and temp files' >> /app/start-pulseaudio.sh && \
    echo 'rm -f /tmp/pulse-socket /tmp/pulse-*' >> /app/start-pulseaudio.sh && \
    echo 'rm -rf /tmp/.pulse-* ~/.pulse* ~/.config/pulse' >> /app/start-pulseaudio.sh && \
    echo '' >> /app/start-pulseaudio.sh && \
    echo '# Create runtime directories' >> /app/start-pulseaudio.sh && \
    echo 'mkdir -p /tmp/pulse /app/.config/pulse /app/.pulse' >> /app/start-pulseaudio.sh && \
    echo '' >> /app/start-pulseaudio.sh && \
    echo '# Set environment variables' >> /app/start-pulseaudio.sh && \
    echo 'export PULSE_SERVER="unix:/tmp/pulse-socket"' >> /app/start-pulseaudio.sh && \
    echo 'export PULSE_RUNTIME_PATH="/tmp/pulse"' >> /app/start-pulseaudio.sh && \
    echo '' >> /app/start-pulseaudio.sh && \
    echo '# Start PulseAudio daemon with proper configuration file' >> /app/start-pulseaudio.sh && \
    echo 'pulseaudio --kill 2>/dev/null || true' >> /app/start-pulseaudio.sh && \
    echo 'sleep 2' >> /app/start-pulseaudio.sh && \
    echo '' >> /app/start-pulseaudio.sh && \
    echo 'pulseaudio --system=false --daemonize=false --high-priority --realtime --disallow-module-loading=false --disallow-exit=false --file=/etc/pulse/default.pa --log-target=stderr --log-level=info > /tmp/pulseaudio.log 2>&1 &' >> /app/start-pulseaudio.sh && \
    echo 'PULSE_PID=$!' >> /app/start-pulseaudio.sh && \
    echo 'echo "PulseAudio started with PID: $PULSE_PID"' >> /app/start-pulseaudio.sh && \
    echo '' >> /app/start-pulseaudio.sh && \
    echo '# Wait for PulseAudio to be ready' >> /app/start-pulseaudio.sh && \
    echo 'for i in {1..30}; do' >> /app/start-pulseaudio.sh && \
    echo '    if pactl info >/dev/null 2>&1; then' >> /app/start-pulseaudio.sh && \
    echo '        echo "✅ PulseAudio is ready (attempt $i)"' >> /app/start-pulseaudio.sh && \
    echo '        break' >> /app/start-pulseaudio.sh && \
    echo '    fi' >> /app/start-pulseaudio.sh && \
    echo '    echo "⏳ Waiting for PulseAudio to start... ($i/30)"' >> /app/start-pulseaudio.sh && \
    echo '    sleep 1' >> /app/start-pulseaudio.sh && \
    echo 'done' >> /app/start-pulseaudio.sh && \
    echo '' >> /app/start-pulseaudio.sh && \
    echo '# Test PulseAudio functionality' >> /app/start-pulseaudio.sh && \
    echo 'if pactl info >/dev/null 2>&1; then' >> /app/start-pulseaudio.sh && \
    echo '    echo "✅ PulseAudio daemon is running successfully"' >> /app/start-pulseaudio.sh && \
    echo '    echo "Server info:"' >> /app/start-pulseaudio.sh && \
    echo '    pactl info' >> /app/start-pulseaudio.sh && \
    echo '    echo "Available sinks:"' >> /app/start-pulseaudio.sh && \
    echo '    pactl list short sinks' >> /app/start-pulseaudio.sh && \
    echo '    echo "Available sources:"' >> /app/start-pulseaudio.sh && \
    echo '    pactl list short sources' >> /app/start-pulseaudio.sh && \
    echo 'else' >> /app/start-pulseaudio.sh && \
    echo '    echo "❌ PulseAudio failed to start properly"' >> /app/start-pulseaudio.sh && \
    echo '    echo "Log contents:"' >> /app/start-pulseaudio.sh && \
    echo '    cat /tmp/pulseaudio.log' >> /app/start-pulseaudio.sh && \
    echo '    exit 1' >> /app/start-pulseaudio.sh && \
    echo 'fi' >> /app/start-pulseaudio.sh && \
    chmod +x /app/start-pulseaudio.sh

# Create non-root user with audio group
RUN addgroup -g 1001 -S nodejs \
    && adduser -S nodejs -u 1001 \
    && (addgroup -g 29 -S audio 2>/dev/null || true) \
    && adduser nodejs audio

# Change ownership
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/local-health || exit 1

# Default command
CMD ["/app/setup-audio.sh", "node", "headless-launcher.js"]
